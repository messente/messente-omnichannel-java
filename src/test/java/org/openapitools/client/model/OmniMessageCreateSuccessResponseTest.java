/*
 * Omnichannel API
 * Messente's API which allows sending messages via various channels with fallback options.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: messente@messente.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.MessageResult;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for OmniMessageCreateSuccessResponse
 */
public class OmniMessageCreateSuccessResponseTest {
    private final OmniMessageCreateSuccessResponse model = new OmniMessageCreateSuccessResponse();

    /**
     * Model tests for OmniMessageCreateSuccessResponse
     */
    @Test
    public void testOmniMessageCreateSuccessResponse() {
        // TODO: test OmniMessageCreateSuccessResponse
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

    /**
     * Test the property 'omnimessageId'
     */
    @Test
    public void omnimessageIdTest() {
        // TODO: test omnimessageId
    }

}
