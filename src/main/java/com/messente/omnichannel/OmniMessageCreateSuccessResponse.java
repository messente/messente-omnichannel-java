/*
 * Omnichannel API
 * This is the beta version of Omnichannel API
 *
 * OpenAPI spec version: 0.0.1
 * Contact: admin@messente.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.messente.omnichannel;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.messente.omnichannel.MessageResult;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * OmniMessageCreateSuccessResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-06-19T09:45:59.838+03:00")
public class OmniMessageCreateSuccessResponse {
  @SerializedName("messages")
  private List<MessageResult> messages = null;

  @SerializedName("to")
  private String to = null;

  @SerializedName("omnimessage_id")
  private UUID omnimessageId = null;

  public OmniMessageCreateSuccessResponse messages(List<MessageResult> messages) {
    this.messages = messages;
    return this;
  }

  public OmniMessageCreateSuccessResponse addMessagesItem(MessageResult messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<MessageResult>();
    }
    this.messages.add(messagesItem);
    return this;
  }

   /**
   * List of messages that compose the Omnimessage
   * @return messages
  **/
  @ApiModelProperty(value = "List of messages that compose the Omnimessage")
  public List<MessageResult> getMessages() {
    return messages;
  }

  public void setMessages(List<MessageResult> messages) {
    this.messages = messages;
  }

  public OmniMessageCreateSuccessResponse to(String to) {
    this.to = to;
    return this;
  }

   /**
   * Recipient phone number in international number format
   * @return to
  **/
  @ApiModelProperty(value = "Recipient phone number in international number format")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public OmniMessageCreateSuccessResponse omnimessageId(UUID omnimessageId) {
    this.omnimessageId = omnimessageId;
    return this;
  }

   /**
   * Unique identifier for the Omnimessage
   * @return omnimessageId
  **/
  @ApiModelProperty(value = "Unique identifier for the Omnimessage")
  public UUID getOmnimessageId() {
    return omnimessageId;
  }

  public void setOmnimessageId(UUID omnimessageId) {
    this.omnimessageId = omnimessageId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OmniMessageCreateSuccessResponse omniMessageCreateSuccessResponse = (OmniMessageCreateSuccessResponse) o;
    return Objects.equals(this.messages, omniMessageCreateSuccessResponse.messages) &&
        Objects.equals(this.to, omniMessageCreateSuccessResponse.to) &&
        Objects.equals(this.omnimessageId, omniMessageCreateSuccessResponse.omnimessageId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messages, to, omnimessageId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OmniMessageCreateSuccessResponse {\n");
    
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    omnimessageId: ").append(toIndentedString(omnimessageId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

